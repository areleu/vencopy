#-*- coding:utf-8 -*-

# __version__ = '0.0.9'
# __maintainer__ = 'Niklas Wulff 2019-02-12'
# __contributors__ = 'Fabia Miorelli, Parth Butte'
# __email__ = 'Niklas.Wulff@dlr.de'
# __birthdate__ = '2019-02-12'
# __status__ = 'dev'  # options are: dev, test, prod

# This config holds all relative paths and filenames for VENCO
numberOfHours: 24
encryptionPW: 'PW'

linksRelative:
    input: ./inputData/
    plots: ./output/plots/
    dataOutput: ./output/data/
    scripts: ./scripts/
    config: ./config/
    outputConfig: ./config/outputConfigREMix.yaml


# During first configuration, optionally fill in absolute links on your system e.g. if you want to have post processed
# output written to an energy system model input folder
linksAbsolute: 
    MiD17: C:/8_Work/Data/MiD17/B2_Regional-DatensatzpaketEncrypted/STATA/
    vencoPyRoot: C:/8_Work/VencoPy/VencoPy_internal/vencopy/
   

files:
    inputDataScalars: VencoPy_scalarInputSES.xlsx
#    inputDataDriveProfiles: inputProfiles_Drive_MiD17_woWeights.csv
#    inputDataPlugProfiles: inputProfiles_Plug_MiD17_woWeights.csv
    MiD17:
        enryptedZipFileB1: B1_Standard-DatensatzpaketEncrypted.zip
        enryptedZipFileB2: B2_Regional-DatensatzpaketEncrypted.zip
        tripDataZipFileRaw: CSV/MiD2017_Regional_Wege.csv
        householdsDataRaw: MiD2017_Regional_Haushalte.csv
        personsDataRaw: MiD2017_Regional_Personen.csv
        tripsDataRaw: MiD2017_Regional_Wege.dta
        purposesProcessed: inputProfiles_Purpose  # inputProfiles_Purpose_runTest_MiD17.csv
        inputDataDriveProfiles: inputProfiles_Drive  # inputProfiles_Drive_runTest_MiD17.csv
        inputDataPlugProfiles: inputProfiles_Plug  # inputProfiles_Plug_runTest_MiD17.csv
        vencoPyOutput: vencoPyOutput
    MiD08:
        householdsDataRaw: MiD2008_PUF_Haushalte.dta
        personDataRaw: MiD2008_PUF_Personen.dta
        tripsDataRaw: MiD2008_PUF_Wege.dta
        tripsProcessedOld: MiD_procCS_caseID-weekday-weight-activity.xlsx
        purposesProcessedOld: MiD_procCS_caseID-weekday-weight-activity.xlsx
        purposesProcessed: inputProfiles_Purpose  # inputProfiles_Purpose_runTest_MiD08.csv
        inputDataDriveProfiles: inputProfiles_Drive  # inputProfiles_Drive_runTest_MiD08.csv
        inputDataPlugProfiles: inputProfiles_Plug  # inputProfiles_Plug_runTest_MiD08.csv
        vencoPyOutput: vencoPyOutput
#        inputDataDriveProfiles: inputProfiles_Drive_MiD08.csv
#        inputDataPlugProfiles: inputProfiles_Plug_MiD08.csv
    vencoPyOutput: vencoPyOutput
    aggPlotName: mobilityComparison
    flexPlotName : flexProfileComparison

dataVariables:
    dataset: ['MiD08', 'MiD17']
    isMIVDriver: ['pkw_f','W_VM_G']
    hhID: ['hhid', 'H_ID_Reg']
    personID: ['pid', 'P_ID']
    hhPersonID: ['NA','HP_ID_Reg']
    tripID: ['wid', 'W_ID']
    tripWeight: ['w_gew','W_GEW']
    tripScaleFactor: ['NA', 'W_HOCH']
    tripStartClock: ['st_time', 'W_SZ']
    tripEndClock: ['en_time', 'W_AZ']
    tripPurpose: ['w04', 'zweck']
    tripDistance: ['wegkm_k', 'wegkm']
    travelTime : ['wegmin_k', 'wegmin_imp1']
    tripStartYear: ['stich_j', 'ST_JAHR']
    tripStartMonth: ['stich_m', 'ST_MONAT']
    tripStartWeek: ['stichwo', 'ST_WOCHE']
    tripStartWeekday: ['stichtag', 'ST_WOTAG']
    tripStartHour: ['st_std', 'W_SZS']
    tripStartMinute: ['st_min', 'W_SZM']
    tripEndHour: ['en_std', 'W_AZS']
    tripEndMinute: ['en_min', 'W_AZM']
    tripEndNextDay: ['en_dat', 'W_FOLGETAG']
    tripIsIntermodal: ['NA', 'weg_intermod']

inputDTypes:
    isMIVDriver: 'bool'
    hhPersonID: 'int'
    tripID: 'int'
    tripWeight: 'float'
#    tripStartClock: 'f'
#    tripEndClock: 'f'
    tripPurpose: 'int'
    tripDistance: 'float'
    tripStartYear: 'int'
    tripStartMonth: 'int'
    tripStartWeek: 'int'
    tripStartWeekday: 'int'
    tripStartHour: 'int'
    tripStartMinute: 'int'
    tripEndHour: 'int'
    tripEndMinute: 'int'
    tripEndNextDay: 'bool'
    tripIsIntermodal: 'int'

filterDicts:
    MiD08:
        include:
            isMIVDriver: [1]
        exclude:
            tripStartHour: [301]
            tripStartMinute: [301]
            tripEndHour: [301]
            tripEndMinute: [301]
            tripStartClock: ['301:00']
            tripEndClock: ['301:00']
            tripPurpose: [97, 98]
        greaterThan:
        smallerThan:
            tripDistance: [1000]

    MiD17:
        include:
            isMIVDriver: [1]
        exclude:
            tripStartHour: [99, 701]
            tripEndHour: [99, 701]
            tripStartClock: [' ']
            tripEndClock: [' ']
            tripIsIntermodal: [1]
        greaterThan:
        smallerThan:
            tripDistance: [1000]

#    tripData = tripData.loc[(tripData['tripStartClock'] <= tripData['tripEndClock']) |
#    (tripData['tripEndNextDay'] == 1), :]  # departure must be before arrival or the trip must end the following day


labels:
    runLabel: vpConsolid
    technologyLabel: BEV-S
    outputFileName: VencoPy_MR1_alpha1_batCap40_cons15
    strAdd:

postprocessing:
    hoursClone: 8760

midReplacements:
    tripStartWeekday:
        1: 'MON'
        2: 'TUE'
        3: 'WED'
        4: 'THU'
        5: 'FRI'
        6: 'SAT'
        7: 'SUN'
    tripPurpose:
        1: 'WORK'  # Erreichen des Arbeitsplatzes
        2: 'WORK'  # dienstlich/gesch채ftlich
        3: 'SCHOOL'  # Erreichen der Ausbildungsst채tte/Schule
        4: 'SHOPPING'  # Einkauf
        5: 'SHOPPING'  # private Erledigung
        6: 'LEISURE'  # Bringen/Holen/Begleiten von Personen
        7: 'LEISURE'  # Freizeitaktivit채t
        8: 'HOME'  # nach Hause
        9: 'HOME'  # R체ckweg vom vorherigen Weg
        10: 'OTHER'  # anderer Zweck
        11: 'HOME'  # Begleitung Erwachsener (MiD08)
        31: 'SCHOOL'  # Zur Schule oder Vorschule (MiD08)
        32: 'SCHOOL'  # Kindertagesstaette oder Kindergarten (MiD08)
        99: 'NA'  # keine Angabe

chargingInfrastructureDistributions:  # Probabilities given for each location aka trip purpose
    'DRIVING': 'FALSCH'
    'HOME': 'WAHR'
    'WORK': 'FALSCH'
    'SCHOOL': 'FALSCH'
    'SHOPPING': 'FALSCH'
    'LEISURE': 'FALSCH'
    'OTHER': 'FALSCH'
    'NA': 'FALSCH'

#chargingInfrastructureDistributionsSchimmy:  # Identifiers from the evaluation of MID08 by Christoph Schimeczek
#    'driving': 'FALSCH'
#    'home': 'WAHR'
#    'work': 'FALSCH'
#    'school': 'FALSCH'
#    'shop': 'FALSCH'
#    'private': 'FALSCH'
#    'recreation': 'FALSCH'
#    'other': 'FALSCH'
#    'n/a': 'FALSCH'
#    nan: 'FALSCH'

plotConfig:
    show: True
    save: True
    xAxis:
        xTickSteps: 24
        weekdays: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN']
        hours: [0, 12]
#        hours: [0]
        ticklabelsize: 10
    yAxis:
        ticklabelsize: 10
    plotRCParameters:
        font.family: sans-serif
        font.weight: normal
        font.size: 10
        axes.labelsize: 10
#        axes.labelpad: 8.0